name: Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.check.outputs.should-release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Install dependencies
        run: npm ci
        timeout-minutes: 5

      - name: Lint
        run: npx nx run-many -t lint
        timeout-minutes: 5

      - name: Type check
        run: npx nx run-many -t typecheck
        timeout-minutes: 5

      - name: Test
        run: npx nx run-many -t test
        timeout-minutes: 10

      - name: Build
        run: npx nx run-many -t build
        timeout-minutes: 10

      - name: Check if should release
        id: check
        run: |
          if git diff --quiet HEAD~1..HEAD -- CHANGELOG.md package.json; then
            echo "should-release=false" >> $GITHUB_OUTPUT
          else
            echo "should-release=true" >> $GITHUB_OUTPUT
          fi

  release:
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && needs.ci.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Install dependencies
        run: npm ci
        timeout-minutes: 5

      - name: Build packages
        run: npx nx run-many -t build
        timeout-minutes: 10

      - name: Release
        run: npx nx release --skip-publish
        timeout-minutes: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        run: npx nx release publish
        timeout-minutes: 5
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
